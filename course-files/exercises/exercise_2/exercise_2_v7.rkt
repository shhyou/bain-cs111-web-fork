#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.9 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 67 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 29 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 500 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. They"
 #" record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools can"
 #" easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 194
(6
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modname"
 #" exercise_2_v7) (read-case-sensitive #t) (teachpacks ()) (htdp-settin"
 #"gs #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"./iterated-images.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Question 1: Using iterated-overlay"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Part (a): using overlay"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"question-1a"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 14 3 11 #"question-1a"
0 0 24 3 1 #" "
0 6           4 21 648
(7
 #"(#(struct:overlay #(struct:translate 10 10 #(struct:overlay #(struct:"
 #"translate 10 10 #(struct:overlay #(struct:translate 10 10 #(struct:ov"
 #"erlay #(struct:translate 10 10 #(struct:translate 10 10 #(struct:elli"
 #"pse 20 20 0 outline \"purple\"))) #(struct:translate 0 0 #(struct:tra"
 #"nslate 20 20 #(struct:ellipse 40 40 0 outline \"purple\"))))) #(struc"
 #"t:translate 0 0 #(struct:translate 30 30 #(struct:ellipse 60 60 0 out"
 #"line \"purple\"))))) #(struct:translate 0 0 #(struct:translate 40 40 "
 #"#(struct:ellipse 80 80 0 outline \"purple\"))))) #(struct:translate 0"
 #" 0 #(struct:translate 50 50 #(struct:ellipse 100 100 0 outline \"purp"
 #"le\")))) #(struct:bb 100 100 100) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Part (b): using iterated-overlay"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"question-1b"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 14 3 11 #"question-1b"
0 0 24 3 1 #" "
0 6           4 21 648 7 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Question 2: Using iterated-beside"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"question-2"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 14 3 10 #"question-2"
0 0 24 3 1 #" "
0 6           4 21 2140
(8
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 10 0 0 0) #(struct:pulled-point"
 #" 0 0 10 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) outline \"purple"
 #"\"))) #(struct:translate 10 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0"
 #" 0) #(struct:pulled-point 0 0 20 50 0 0) #(struct:pulled-point 0 0 0 "
 #"50 0 0)) outline \"purple\"))))) #(struct:translate 30 0 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 30 50 0 0) #"
 #"(struct:pulled-point 0 0 0 50 0 0)) outline \"purple\"))))) #(struct:"
 #"translate 60 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pu"
 #"lled-point 0 0 40 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) outlin"
 #"e \"purple\"))))) #(struct:translate 100 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled"
 #"-point 0 0 0 50 0 0)) outline \"purple\"))))) #(struct:translate 150 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 "
 #"0 60 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) outline \"purple\")"
 #")))) #(struct:translate 210 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 70 0 0"
 #" 0) #(struct:pulled-point 0 0 70 50 0 0) #(struct:pulled-point 0 0 0 "
 #"50 0 0)) outline \"purple\"))))) #(struct:translate 280 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 80 0 0 0) #(struct:pulled-point 0 0 80 50 0 0) "
 #"#(struct:pulled-point 0 0 0 50 0 0)) outline \"purple\")))) #(struct:"
 #"bb 360 50 50) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Question 3: A Simple Flower"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"question-3"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 14 3 10 #"question-3"
0 0 24 3 1 #" "
0 6           4 21 1143
(9
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 35.20945179189488 #(struct:translate 0 -0.0 #(st"
 #"ruct:translate 50 25/2 #(struct:ellipse 100 25 0 255 \"blue\")))) #(s"
 #"truct:translate 30.504918319820803 0 #(struct:translate -7.8439744922"
 #"57594 91.39956517696571 #(struct:translate 27.33905617243679 -43.6901"
 #"1338507083 #(struct:ellipse 100 25 72 255 \"blue\")))))) #(struct:tra"
 #"nslate 8.887297701523664 16.6289802749301 #(struct:translate 74.21623"
 #"636356779 70.58244656127528 #(struct:translate -33.10353406509145 -39"
 #".5019750443105 #(struct:ellipse 25 100 54 255 \"blue\")))))) #(struct"
 #":translate 8.887297701523664 16.6289802749301 #(struct:translate 88.9"
 #"1086767087961 11.803921332027965 #(struct:translate -47.7981653724032"
 #"8 19.27655018493681 #(struct:ellipse 100 25 36 255 \"blue\")))))) #(s"
 #"truct:translate 30.504918319820806 0.0 #(struct:translate 15.93243841"
 #"5121252 -3.7060864525496413 #(struct:translate 3.5626432650579414 51."
 #"41553824444452 #(struct:ellipse 25 100 18 255 \"blue\"))))) #(struct:"
 #"bb 100.0 95.41890358378976 95.41890358378976) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Question 4: A Colorful Flower"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"question-4"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 14 3 10 #"question-4"
0 0 24 3 1 #" "
0 6           4 21 1253
(10
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 35.20945179189488 #(struct:translate 0 -0.0 #(st"
 #"ruct:translate 50 25/2 #(struct:ellipse 100 25 0 255 #(struct:color 0"
 #" 255 0 255))))) #(struct:translate 30.504918319820803 0 #(struct:tran"
 #"slate -7.843974492257594 91.39956517696571 #(struct:translate 27.3390"
 #"5617243679 -43.69011338507083 #(struct:ellipse 100 25 72 255 #(struct"
 #":color 0 230 25 255))))))) #(struct:translate 8.887297701523664 16.62"
 #"89802749301 #(struct:translate 74.21623636356779 70.58244656127528 #("
 #"struct:translate -33.10353406509145 -39.5019750443105 #(struct:ellips"
 #"e 25 100 54 255 #(struct:color 0 205 50 255))))))) #(struct:translate"
 #" 8.887297701523664 16.6289802749301 #(struct:translate 88.91086767087"
 #"961 11.803921332027965 #(struct:translate -47.79816537240328 19.27655"
 #"018493681 #(struct:ellipse 100 25 36 255 #(struct:color 0 180 75 255)"
 #")))))) #(struct:translate 30.504918319820806 0.0 #(struct:translate 1"
 #"5.932438415121252 -3.7060864525496413 #(struct:translate 3.5626432650"
 #"579414 51.41553824444452 #(struct:ellipse 25 100 18 255 #(struct:colo"
 #"r 0 155 100 255)))))) #(struct:bb 100.0 95.41890358378976 95.41890358"
 #"378976) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; Question 5: A Fancy Flower"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"question-5"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #" "
0 0 14 3 10 #"question-5"
0 0 24 3 1 #" "
0 6           4 21 1252
(11
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 35.20945179189488 #(struct:translate 0 -0.0 #(st"
 #"ruct:translate 50 25/2 #(struct:ellipse 100 25 0 255 #(struct:color 2"
 #"55 0 0 100))))) #(struct:translate 30.504918319820803 0 #(struct:tran"
 #"slate -7.843974492257594 91.39956517696571 #(struct:translate 27.3390"
 #"5617243679 -43.69011338507083 #(struct:ellipse 100 25 72 255 #(struct"
 #":color 191 64 0 100))))))) #(struct:translate 8.887297701523664 16.62"
 #"89802749301 #(struct:translate 74.21623636356779 70.58244656127528 #("
 #"struct:translate -33.10353406509145 -39.5019750443105 #(struct:ellips"
 #"e 25 100 54 255 #(struct:color 128 128 0 100))))))) #(struct:translat"
 #"e 8.887297701523664 16.6289802749301 #(struct:translate 88.9108676708"
 #"7961 11.803921332027965 #(struct:translate -47.79816537240328 19.2765"
 #"5018493681 #(struct:ellipse 100 25 36 255 #(struct:color 64 191 0 100"
 #"))))))) #(struct:translate 30.504918319820806 0.0 #(struct:translate "
 #"15.932438415121252 -3.7060864525496413 #(struct:translate 3.562643265"
 #"0579414 51.41553824444452 #(struct:ellipse 25 100 18 255 #(struct:col"
 #"or 0 255 0 100)))))) #(struct:bb 100.0 95.41890358378976 95.418903583"
 #"78976) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Use this to test your colors."
0 0 24 29 1 #"\n"
0 0 17 3 73
(12
 #";; Remember, your final answer must pass the previous test, so you sh"
 #"ould"
) 0 0 24 29 1 #"\n"
0 0 17 3 47 #";; only use the image below as a temporary aid."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; (define q5-colors "
0 6           4 17 1252
(13
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 35.20945179189488 #(struct:translate 0 -0.0 #(st"
 #"ruct:translate 50 25/2 #(struct:ellipse 100 25 0 255 #(struct:color 2"
 #"55 0 0 255))))) #(struct:translate 30.504918319820803 0 #(struct:tran"
 #"slate -7.843974492257594 91.39956517696571 #(struct:translate 27.3390"
 #"5617243679 -43.69011338507083 #(struct:ellipse 100 25 72 255 #(struct"
 #":color 191 64 0 255))))))) #(struct:translate 8.887297701523664 16.62"
 #"89802749301 #(struct:translate 74.21623636356779 70.58244656127528 #("
 #"struct:translate -33.10353406509145 -39.5019750443105 #(struct:ellips"
 #"e 25 100 54 255 #(struct:color 128 128 0 255))))))) #(struct:translat"
 #"e 8.887297701523664 16.6289802749301 #(struct:translate 88.9108676708"
 #"7961 11.803921332027965 #(struct:translate -47.79816537240328 19.2765"
 #"5018493681 #(struct:ellipse 100 25 36 255 #(struct:color 64 191 0 255"
 #"))))))) #(struct:translate 30.504918319820806 0.0 #(struct:translate "
 #"15.932438415121252 -3.7060864525496413 #(struct:translate 3.562643265"
 #"0579414 51.41553824444452 #(struct:ellipse 25 100 18 255 #(struct:col"
 #"or 0 255 0 255)))))) #(struct:bb 100.0 95.41890358378976 95.418903583"
 #"78976) #f)"
) 0 0 17 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Question 6: Paint Chips"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; palette : color color number -> image"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; purpose: return a row of n (given by the number argument)"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; 50x50 squares where the colors of the squares interpolate"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; between the two color arguments"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"palette"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 6 #"color1"
0 0 24 3 1 #" "
0 0 14 3 6 #"color2"
0 0 24 3 1 #" "
0 0 14 3 11 #"num-squares"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"palette"
0 0 24 3 2 #" ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 21 3 2 #"86"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #" "
0 0 21 3 3 #"233"
0 0 24 3 3 #") ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 21 3 3 #"213"
0 0 24 3 1 #" "
0 0 21 3 2 #"94"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 1413
(14
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(s"
 #"truct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)"
 #") 255 #(struct:color 86 180 233 255)))) #(struct:translate 50 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50"
 #" 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 118 158"
 #" 175 255)))))) #(struct:translate 100 0 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-po"
 #"int 0 0 0 50 0 0)) 255 #(struct:color 150 137 116 255)))))) #(struct:"
 #"translate 150 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:p"
 #"ulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #"
 #"(struct:color 181 116 58 255)))))) #(struct:translate 200 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0"
 #") #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 213 94 0 25"
 #"5))))) #(struct:bb 250 50 50) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"palette"
0 0 24 3 2 #" ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 536
(15
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-p"
 #"oint 0 0 0 50 0 0)) 255 #(struct:color 0 0 0 255)))) #(struct:transla"
 #"te 50 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-po"
 #"int 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:"
 #"color 255 255 255 255))))) #(struct:bb 100 50 50) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; Question 7: Paint Grids"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; palette-grid : color color number number -> image"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; purpose: return a grid with the given number of rows and columns"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; where each row interpolates between the two color arguments and"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; each column interpolates between the color of the top square and"
0 0 24 29 1 #"\n"
0 0 17 3 80
(16
 #";; black (color 0 0 0) (see the assignment for more detail if this is"
 #" confusing)"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#";; NOTE: you MUST use your palette function from the previous step"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"palette-grid"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 6 #"color1"
0 0 24 3 1 #" "
0 0 14 3 6 #"color2"
0 0 24 3 1 #" "
0 0 14 3 8 #"num-rows"
0 0 24 3 1 #" "
0 0 14 3 8 #"num-cols"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"palette-grid"
0 0 24 3 2 #" ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 21 3 2 #"86"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 1 #" "
0 0 21 3 3 #"233"
0 0 24 3 3 #") ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 21 3 3 #"213"
0 0 24 3 1 #" "
0 0 21 3 2 #"94"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 7199
(17
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pull"
 #"ed-point 0 0 0 50 0 0)) 255 #(struct:color 86 180 233 255)))) #(struc"
 #"t:translate 50 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:"
 #"pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 "
 #"#(struct:color 118 158 175 255)))))) #(struct:translate 100 0 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0"
 #" 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 150 137 1"
 #"16 255)))))) #(struct:translate 150 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-poin"
 #"t 0 0 0 50 0 0)) 255 #(struct:color 181 116 58 255)))))) #(struct:tra"
 #"nslate 200 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pull"
 #"ed-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(st"
 #"ruct:color 213 94 0 255)))))) #(struct:translate 0 50 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:c"
 #"olor 69 144 186 255)))) #(struct:translate 50 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:p"
 #"ulled-point 0 0 0 50 0 0)) 255 #(struct:color 94 127 140 255)))))) #("
 #"struct:translate 100 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(s"
 #"truct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)"
 #") 255 #(struct:color 120 110 93 255)))))) #(struct:translate 150 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50"
 #" 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 145 "
 #"92 46 255)))))) #(struct:translate 200 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-p"
 #"oint 0 0 0 50 0 0)) 255 #(struct:color 170 75 0 255)))))))) #(struct:"
 #"translate 0 100 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-poin"
 #"t 0 0 0 50 0 0)) 255 #(struct:color 52 108 140 255)))) #(struct:trans"
 #"late 50 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-"
 #"point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struc"
 #"t:color 71 95 105 255)))))) #(struct:translate 100 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(str"
 #"uct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 90 82 70 255))))))"
 #" #(struct:translate 150 0 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) "
 #"#(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0"
 #" 0)) 255 #(struct:color 109 69 35 255)))))) #(struct:translate 200 0 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 "
 #"50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 12"
 #"8 56 0 255)))))))) #(struct:translate 0 150 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 "
 #"50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 34 72"
 #" 93 255)))) #(struct:translate 50 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point "
 #"0 0 0 50 0 0)) 255 #(struct:color 47 64 70 255)))))) #(struct:transla"
 #"te 100 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-p"
 #"oint 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct"
 #":color 60 55 46 255)))))) #(struct:translate 150 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struc"
 #"t:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 72 46 23 255)))))) #"
 #"(struct:translate 200 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #("
 #"struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0"
 #")) 255 #(struct:color 85 38 0 255)))))))) #(struct:translate 0 200 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(stru"
 #"ct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 2"
 #"55 #(struct:color 17 36 47 255)))) #(struct:translate 50 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0)"
 #" #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 24 32 35 255"
 #")))))) #(struct:translate 100 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0"
 #" 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 "
 #"0 50 0 0)) 255 #(struct:color 30 28 24 255)))))) #(struct:translate 1"
 #"50 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point"
 #" 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:col"
 #"or 36 23 12 255)))))) #(struct:translate 200 0 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pu"
 #"lled-point 0 0 0 50 0 0)) 255 #(struct:color 43 19 0 255))))))) #(str"
 #"uct:bb 250 250 250) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"palette-grid"
0 0 24 3 2 #" ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 21 3 3 #"204"
0 0 24 3 1 #" "
0 0 21 3 3 #"121"
0 0 24 3 1 #" "
0 0 21 3 3 #"167"
0 0 24 3 3 #") ("
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"158"
0 0 24 3 1 #" "
0 0 21 3 3 #"115"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 21 3434
(18
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 50 "
 #"0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 204 121 "
 #"167 255)))) #(struct:translate 50 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point "
 #"0 0 0 50 0 0)) 255 #(struct:color 102 140 141 255)))))) #(struct:tran"
 #"slate 100 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulle"
 #"d-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(str"
 #"uct:color 0 158 115 255)))))) #(struct:translate 0 50 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 5"
 #"0 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 153 91"
 #" 125 255)))) #(struct:translate 50 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point"
 #" 0 0 0 50 0 0)) 255 #(struct:color 76 104 106 255)))))) #(struct:tran"
 #"slate 100 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulle"
 #"d-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(str"
 #"uct:color 0 118 86 255)))))))) #(struct:translate 0 100 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50"
 #" 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 102 "
 #"60 84 255)))) #(struct:translate 50 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 50 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-poin"
 #"t 0 0 0 50 0 0)) 255 #(struct:color 51 70 71 255)))))) #(struct:trans"
 #"late 100 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled"
 #"-point 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(stru"
 #"ct:color 0 79 58 255)))))))) #(struct:translate 0 150 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 5"
 #"0 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:color 51 30 "
 #"42 255)))) #(struct:translate 50 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 5"
 #"0 0 0 0) #(struct:pulled-point 0 0 50 50 0 0) #(struct:pulled-point 0"
 #" 0 0 50 0 0)) 255 #(struct:color 26 35 36 255)))))) #(struct:translat"
 #"e 100 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-po"
 #"int 0 0 50 50 0 0) #(struct:pulled-point 0 0 0 50 0 0)) 255 #(struct:"
 #"color 0 40 29 255))))))) #(struct:bb 150 200 200) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Question 8: Bullseye Revisited"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; signature: fill this out"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; purpose: fill this out"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"bullseye/simple"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 9 #"num-rings"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 14 3 3 #"clr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"bullseye/simple"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #") "
0 0 14 3 11 #"question-1b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"bullseye/simple"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 24 3 2 #") "
0 0 14 3 11 #"question-1a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(19
 #"; You must turn these images into test cases, using the information a"
 #"bove the image"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 58
#"; 20 rings, radius of 100, line color - (color 86 180 233)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 6           4 17 2615
(20
 #"(#(struct:overlay #(struct:translate 5 5 #(struct:overlay #(struct:tr"
 #"anslate 5 5 #(struct:overlay #(struct:translate 5 5 #(struct:overlay "
 #"#(struct:translate 5 5 #(struct:overlay #(struct:translate 5 5 #(stru"
 #"ct:overlay #(struct:translate 5 5 #(struct:overlay #(struct:translate"
 #" 5 5 #(struct:overlay #(struct:translate 5 5 #(struct:overlay #(struc"
 #"t:translate 5 5 #(struct:overlay #(struct:translate 5 5 #(struct:over"
 #"lay #(struct:translate 5 5 #(struct:overlay #(struct:translate 5 5 #("
 #"struct:overlay #(struct:translate 5 5 #(struct:overlay #(struct:trans"
 #"late 5 5 #(struct:overlay #(struct:translate 5 5 #(struct:overlay #(s"
 #"truct:translate 5 5 #(struct:overlay #(struct:translate 5 5 #(struct:"
 #"overlay #(struct:translate 5 5 #(struct:overlay #(struct:translate 5 "
 #"5 #(struct:translate 5 5 #(struct:ellipse 10 10 0 outline #0=#(struct"
 #":color 86 180 233 255)))) #(struct:translate 0 0 #(struct:translate 1"
 #"0 10 #(struct:ellipse 20 20 0 outline #0#))))) #(struct:translate 0 0"
 #" #(struct:translate 15 15 #(struct:ellipse 30 30 0 outline #0#))))) #"
 #"(struct:translate 0 0 #(struct:translate 20 20 #(struct:ellipse 40 40"
 #" 0 outline #0#))))) #(struct:translate 0 0 #(struct:translate 25 25 #"
 #"(struct:ellipse 50 50 0 outline #0#))))) #(struct:translate 0 0 #(str"
 #"uct:translate 30 30 #(struct:ellipse 60 60 0 outline #0#))))) #(struc"
 #"t:translate 0 0 #(struct:translate 35 35 #(struct:ellipse 70 70 0 out"
 #"line #0#))))) #(struct:translate 0 0 #(struct:translate 40 40 #(struc"
 #"t:ellipse 80 80 0 outline #0#))))) #(struct:translate 0 0 #(struct:tr"
 #"anslate 45 45 #(struct:ellipse 90 90 0 outline #0#))))) #(struct:tran"
 #"slate 0 0 #(struct:translate 50 50 #(struct:ellipse 100 100 0 outline"
 #" #0#))))) #(struct:translate 0 0 #(struct:translate 55 55 #(struct:el"
 #"lipse 110 110 0 outline #0#))))) #(struct:translate 0 0 #(struct:tran"
 #"slate 60 60 #(struct:ellipse 120 120 0 outline #0#))))) #(struct:tran"
 #"slate 0 0 #(struct:translate 65 65 #(struct:ellipse 130 130 0 outline"
 #" #0#))))) #(struct:translate 0 0 #(struct:translate 70 70 #(struct:el"
 #"lipse 140 140 0 outline #0#))))) #(struct:translate 0 0 #(struct:tran"
 #"slate 75 75 #(struct:ellipse 150 150 0 outline #0#))))) #(struct:tran"
 #"slate 0 0 #(struct:translate 80 80 #(struct:ellipse 160 160 0 outline"
 #" #0#))))) #(struct:translate 0 0 #(struct:translate 85 85 #(struct:el"
 #"lipse 170 170 0 outline #0#))))) #(struct:translate 0 0 #(struct:tran"
 #"slate 90 90 #(struct:ellipse 180 180 0 outline #0#))))) #(struct:tran"
 #"slate 0 0 #(struct:translate 95 95 #(struct:ellipse 190 190 0 outline"
 #" #0#))))) #(struct:translate 0 0 #(struct:translate 100 100 #(struct:"
 #"ellipse 200 200 0 outline #0#)))) #(struct:bb 200 200 200) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #"; 3 rings, radius of 75, line color - (color 204 121 167)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 6           4 17 392
(21
 #"(#(struct:overlay #(struct:translate 25 25 #(struct:overlay #(struct:"
 #"translate 25 25 #(struct:translate 25 25 #(struct:ellipse 50 50 0 out"
 #"line #0=#(struct:color 204 121 167 255)))) #(struct:translate 0 0 #(s"
 #"truct:translate 50 50 #(struct:ellipse 100 100 0 outline #0#))))) #(s"
 #"truct:translate 0 0 #(struct:translate 75 75 #(struct:ellipse 150 150"
 #" 0 outline #0#)))) #(struct:bb 150 150 150) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Question 9: Colorful Bullseye"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; signature: fill this out"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; purpose: fill this out"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"bullseye/color"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 9 #"num-rings"
0 0 24 3 1 #" "
0 0 14 3 6 #"radius"
0 0 24 3 1 #" "
0 0 14 3 11 #"inner-color"
0 0 24 3 1 #" "
0 0 14 3 11 #"outer-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 19 3 12 #"\"fill me in\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #"; turn the below images into test cases"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; NOTE THE ORDER OF THE ARGUMENTS!"
0 0 24 29 1 #"\n"
0 0 17 3 84
(22
 #"; 6 rings, radius 50, inner color (color 0 158 115), outer color (col"
 #"or 204 121 167)"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 6           4 17 957
(23
 #"(#(struct:overlay #(struct:translate 25/3 25/3 #(struct:overlay #(str"
 #"uct:translate 25/3 25/3 #(struct:overlay #(struct:translate 25/3 25/3"
 #" #(struct:overlay #(struct:translate 25/3 25/3 #(struct:overlay #(str"
 #"uct:translate 25/3 25/3 #(struct:translate 25/3 25/3 #(struct:ellipse"
 #" 50/3 50/3 0 255 #(struct:color 0 158 115 255)))) #(struct:translate "
 #"0 0 #(struct:translate 50/3 50/3 #(struct:ellipse 100/3 100/3 0 255 #"
 #"(struct:color 41 151 125 255)))))) #(struct:translate 0 0 #(struct:tr"
 #"anslate 25 25 #(struct:ellipse 50 50 0 255 #(struct:color 82 143 136 "
 #"255)))))) #(struct:translate 0 0 #(struct:translate 100/3 100/3 #(str"
 #"uct:ellipse 200/3 200/3 0 255 #(struct:color 122 136 146 255)))))) #("
 #"struct:translate 0 0 #(struct:translate 125/3 125/3 #(struct:ellipse "
 #"250/3 250/3 0 255 #(struct:color 163 128 157 255)))))) #(struct:trans"
 #"late 0 0 #(struct:translate 50 50 #(struct:ellipse 100 100 0 255 #(st"
 #"ruct:color 204 121 167 255))))) #(struct:bb 100 100 100) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 82
(24
 #"; 4 rings, radius 75, inner color (color 213 94 0), outer color (colo"
 #"r 86 180 233)"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 6           4 17 618
(25
 #"(#(struct:overlay #(struct:translate 75/4 75/4 #(struct:overlay #(str"
 #"uct:translate 75/4 75/4 #(struct:overlay #(struct:translate 75/4 75/4"
 #" #(struct:translate 75/4 75/4 #(struct:ellipse 75/2 75/2 0 255 #(stru"
 #"ct:color 213 94 0 255)))) #(struct:translate 0 0 #(struct:translate 7"
 #"5/2 75/2 #(struct:ellipse 75 75 0 255 #(struct:color 171 123 78 255))"
 #")))) #(struct:translate 0 0 #(struct:translate 225/4 225/4 #(struct:e"
 #"llipse 225/2 225/2 0 255 #(struct:color 128 151 155 255)))))) #(struc"
 #"t:translate 0 0 #(struct:translate 75 75 #(struct:ellipse 150 150 0 2"
 #"55 #(struct:color 86 180 233 255))))) #(struct:bb 150 150 150) #f)"
) 0           0
